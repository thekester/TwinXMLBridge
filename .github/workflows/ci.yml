name: CI/CD Pipeline

on:
  push:
    branches: ['*']  # Trigger on all branches when a push occurs
  pull_request:
    branches: ['*']  # Trigger on all branches when a pull request is created or updated
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-24.04  # https://github.blog/changelog/2024-05-14-github-hosted-runners-public-beta-of-ubuntu-24-04-is-now-available/

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --exit-zero  # Continue even if there are linting issues

    - name: Run Tests
      run: |
        pip install pytest
        pytest --disable-warnings  # Show warnings but do not treat them as errors

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Verify Docker Compose Installation
      run: |
        docker-compose --version

    - name: Build Docker Images
      run: |
        docker-compose -f docker/docker-compose.yml build

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag and Push Server Image
      run: |
        # Extract branch name and replace invalid characters for Docker tags
        BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
        # Tag the server image with the branch name
        docker tag twinxml_bridge_server:latest ${{ secrets.DOCKER_USERNAME }}/twinxml_bridge_server:${BRANCH_NAME}
        # Push the tagged server image to Docker Hub
        docker push ${{ secrets.DOCKER_USERNAME }}/twinxml_bridge_server:${BRANCH_NAME}

    - name: Tag and Push Client Image
      run: |
        # Extract branch name and replace invalid characters for Docker tags
        BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
        # Tag the client image with the branch name
        docker tag twinxml_bridge_client:latest ${{ secrets.DOCKER_USERNAME }}/twinxml_bridge_client:${BRANCH_NAME}
        # Push the tagged client image to Docker Hub
        docker push ${{ secrets.DOCKER_USERNAME }}/twinxml_bridge_client:${BRANCH_NAME}
